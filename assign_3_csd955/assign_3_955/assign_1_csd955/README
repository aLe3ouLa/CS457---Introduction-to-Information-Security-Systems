***************************************************
* HY457 - Introduction to computer security       *
* Alexandra Barka                                 *
* AM: 955 Login: barka                            *
***************************************************

TASK A | KDF

This function generates a symmetric key from a user-defined string (password). This function uses as a hash function SHA1. Selects the appropriate cipher based on bit_mode (aes-128-ecb or aes-256-ecb). 
Finally, this function convert the password bytes to key.

TASK B | encrypt

This function reads the data of an input file (plaintext) and encrypts them using AES-ECB (EVP_CIPHER_CTX_new, EVP_EncryptInit, EVP_EncryptUpdate, EVP_EncryptFinal) with the key generated by the KDF described in Task A.
Then the ciphertext created is stored in the output file.

TASK C | decrypt

This function reads the ciphertext from an input file and decrypts them using AES-ECB (EVP_CIPHER_CTX_new, EVP_DecryptInit, EVP_DecryptUpdate, EVP_DecryptFinal) with the key generated by the KDF described in Task A.
Then the plaintext created is stored in the output file.


TASK D | sign

This function reads the plaintext data from an input file and encrypts them using the function in Task B, using the key generated in Task A, and then generates the CMAC. 
After the ciphertext and the CMAC are generated, it stores the ciphertext concatenated with the CMAC in an appropriate output file.
To generate CMAC, CMAC is used (CMAC_CTX_new, CMAC_Init, CMAC_Update, CMAC_Final).

TASK E | Verify

The function returns TRUE if the CMAC in file and the CMAC generated are equal (is verified) and stores the plaintext in an appropriate file.
Otherwise, it just returns FALSE.

TASK F

1. File encrypted with: bit_mode = 256, password = csd955
./assign_1 -i ../files/encryptme_256.txt  -o ../results/decryptme_256.txt  -p cs955  -b 256 -e

2. File decrypted with: bit_mode = 128, password = hy457
./assign_1 -i ../files/hy457_decryptme_128.txt  -o ../results/hy457_encryptme_128.txt  -p hy457  -b 128 -d

3. File signed with: bit_mode = 128. password = csd955
./assign_1 -i ../files/signme_128.txt  -o ../results/verifyme_128.txt -p csd955 -b 128 -s

4. File hy457_verifyme_128.txt varified with: bit_mode = 128, password = hy457
./assign_1 -i ../files/hy457_verifyme_128.txt  -o ../results/hy457_verified_128.txt  -p hy457 -b 128 -v
NOT VERIFIED.
File hy457_verifyme_256.txt varified with: bit_mode = 256, password = hy457
./assign_1 -i ../files/hy457_verifyme_256.txt  -o ../results/hy457_verified_256.txt  -p hy457 -b 256 -v
NOT VERIFIED.
